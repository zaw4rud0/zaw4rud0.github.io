<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Adrian&#39;s Blog</title>
        <link>https://blog.martinez-ayuso.ch/posts/</link>
        <description>Recent content in Posts on Adrian&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Fri, 27 Aug 2021 16:04:35 +0200</lastBuildDate>
        <atom:link href="https://blog.martinez-ayuso.ch/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>How to Add TeX Support in Hugo</title>
            <link>https://blog.martinez-ayuso.ch/posts/2021/08/how-to-add-tex-support-in-hugo/</link>
            <pubDate>Fri, 27 Aug 2021 16:04:35 +0200</pubDate>
            
            <guid>https://blog.martinez-ayuso.ch/posts/2021/08/how-to-add-tex-support-in-hugo/</guid>
            <description>In this post I want to show how you can add support for TeX so you can properly render TeX code in your Hugo blog. Chances are that you are already familiar with Hugo and with how everything works. If you are not, that&amp;rsquo;s no problem, you can simply follow this tutorial step by step. Before you start, you should check if your Hugo theme doesn&amp;rsquo;t already support TeX, else this tutorial is pretty much useless for you.</description>
            <content type="html"><![CDATA[<p>In this post I want to show how you can add support for TeX so you can properly render TeX code in your Hugo blog. Chances are that you are already familiar with Hugo and with how everything works. If you are not, that&rsquo;s no problem, you can simply follow this tutorial step by step. Before you start, you should check if your Hugo theme doesn&rsquo;t already support TeX, else this tutorial is pretty much useless for you.</p>
<p>First of all, we create a file called <code>katex.html</code> inside the <code>partials</code> folder which you can find in the <code>layouts</code> folder. Inside it, we paste the following code:</p>
<pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/katex@0.13.13/dist/katex.min.css&quot; integrity=&quot;sha384-RZU/ijkSsFbcmivfdRBQDtwuwVqK7GMOw6IMvKyeWL2K5UAlyp6WonmB8m7Jd0Hn&quot; crossorigin=&quot;anonymous&quot;&gt;
&lt;script defer src=&quot;https://cdn.jsdelivr.net/npm/katex@0.13.13/dist/katex.min.js&quot; integrity=&quot;sha384-pK1WpvzWVBQiP0/GjnvRxV4mOb0oxFuyRxJlk6vVw146n3egcN5C925NCP7a7BY8&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;
&lt;script defer src=&quot;https://cdn.jsdelivr.net/npm/katex@0.13.13/dist/contrib/auto-render.min.js&quot; integrity=&quot;sha384-vZTG03m+2yp6N6BNi5iM4rW4oIwk5DfcNdFfxkk9ZWpDriOkXX8voJBFrAO7MpVl&quot; crossorigin=&quot;anonymous&quot;
        onload=&quot;renderMathInElement(document.body);&quot;&gt;&lt;/script&gt;
</code></pre>
<p>This is the auto-render extension of KaTeX, which, as the name suggests, automatically renders all of the TeX math inside a text. For more information, refer to this <a href="https://katex.org/docs/autorender.html">page</a>.</p>
<p>Afterwards, we switch to the <code>posts</code> folder which is located inside the <code>layouts</code> folder as well. There we add a copy of the <code>single.html</code> file from the <code>themes/YOUR-THEME/layouts/posts</code> folder and insert the following code inside the <code>&lt;article&gt;</code> element:</p>
<pre><code>{{ if .Params.katex}}
    {{ partial &quot;katex.html&quot; . }}
{{ end }}
</code></pre>
<p>In a nutshell, this piece of code uses the KaTeX auto-render I mentioned above to render all of the TeX Code it can find inside the blog post, assuming that the post contains the line <code>katex: true</code> in its front matter.</p>
<p>We are pretty much done and we can see that this TeX code</p>
<pre><code>$$\int \frac{1}{x-2}$$
</code></pre>
<p>outputs the following $$\int \frac{1}{x-2}$$ which in turn shows that the KaTeX auto-render is working.</p>
<h3 id="bonus">Bonus</h3>
<p>In order to automatically add the <code>katex</code> line inside the front matter of every blog post, we can override the current archetype of a blog post. To do so, we simply go inside the <code>archetypes</code> folder and add a file called <code>posts.md</code>. Inside that file, we add the following code:</p>
<pre><code>---
title: &quot;{{ replace .Name &quot;-&quot; &quot; &quot; | title }}&quot;
date: {{ .Date }}
draft: true
toc: false
katex: false
images:
tags:
  - untagged
---
</code></pre>
<p>If that file already exists in that folder, simply add <code>katex: false</code> somewhere in the front matter.</p>
<p>The <code>posts.md</code> file basically represents the front matter of every blog post we create from now on. If you are using TeX code inside your post and want to render it, simply set <code>katex: true</code>.</p>
<p>I hope you could follow this small tutorial and that you achieved the desired result.</p>
<p>Have a great day! ðŸ˜„</p>
]]></content>
        </item>
        
        <item>
            <title>Hello, World!</title>
            <link>https://blog.martinez-ayuso.ch/posts/2021/08/hello-world/</link>
            <pubDate>Sat, 21 Aug 2021 17:24:19 +0200</pubDate>
            
            <guid>https://blog.martinez-ayuso.ch/posts/2021/08/hello-world/</guid>
            <description>This is my very first post on this blog. Obligatory code:
public static void main(String[] args) {System.out.println(&amp;quot;Hello, World!&amp;quot;);} I hope you enjoy your stay on this blog, and I will see you again very soon.</description>
            <content type="html"><![CDATA[<p>This is my very first post on this blog. Obligatory code:</p>
<pre><code class="language-java">public static void main(String[] args) {
	System.out.println(&quot;Hello, World!&quot;);
}
</code></pre>
<p>I hope you enjoy your stay on this blog, and I will see you again very soon.</p>
]]></content>
        </item>
        
    </channel>
</rss>
